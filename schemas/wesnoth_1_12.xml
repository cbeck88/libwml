<root>

<!-- Catch all, used for some attributes that we know about but don't handle
     properly yet -->

<type_alias type="string_val" name="ignored_attribute" />

<!-- Catch all, used for some parts of AST that aren't complete -->
<tag name="unstructured">
  <member type="all_children_map" name="all" />
</tag>

<fwd_tag name="unit_filter" />
<type_alias name="unit_filter_wrapper" type="util::recursive_wrapper[unit_filter]" />

<tag name="attack_filter">
  <member type="string_opt" name="range" />
  <member type="string_opt" name="name" />
  <member type="string_opt" name="type" />
  <member type="int_opt"    name="damage" />
  <member type="string_opt" name="special" />
</tag>

<tag name="frame_tag" alias="frame">
  <member type="string_opt" name="image" />
  <member type="string_opt" name="sound" />
  <member type="string_opt" name="halo"  />
  <member type="int_opt"    name="alpha" />
  <member type="int_opt"    name="duration" />
  <member type="int_opt"    name="halo_x" />
  <member type="int_opt"    name="halo_y" />
  <member type="int_opt"    name="offset" />
  <member type="int_opt"    name="directional_x" />
  <member type="bool_opt"   name="auto_hflip" />
  <member type="bool_opt"   name="auto_vflip" />
  <member type="string_opt" name="blend_color" />
  <member type="int_opt"    name="blend_ratio" />
  <member type="string_opt" name="image_diagonal" />
</tag>

<tag name = "animation_tag">
  <member type="string_opt" name="apply_to" />
  <member type="int_opt" name="start_time" />
  <member type="int_opt" name="offset" />
  <member type="bool_opt" name="hits" />
  <member type="int_opt" name="attack_sound_start_time" />
  <member type="int_opt" name="missile_start_time" />
  <member type="int_opt" name="sound_start_time" />
  <member type="int_opt" name="horse_sound_start_time" />
  <member type="int_opt" name="halo_start_time" />
  <member type="int_opt" name="halo1_start_time" />
  <member type="int_opt" name="halo2_start_time" />
  <member type="int_opt" name="halo3_start_time" />
  <member type="int_opt" name="halo4_start_time" />
  <member type="int_opt" name="halo5_start_time" />
  <member type="string_list_val" name="direction" />
  <member type="frame_tag" name="frame" />
  <member type="frame_tag" name="halo_frame" />
  <member type="frame_tag" name="missile_frame" />
  <member type="frame_tag" name="sound_frame" />
  <member type="frame_tag" name="attack_sound_frame" />
  <member type="frame_tag" name="die_sound_frame" />
  <member type="frame_tag" name="horse_sound_frame" />
  <member type="attack_filter" name="filter_attack" />
  <member type="unit_filter_wrapper" name="filter_second" />
</tag>

<!-- Filter types -->

<fwd_tag name="location_filter" />
<fwd_tag name="side_filter" />
<fwd_tag name="unit_filter_adjacent" />
<fwd_tag name="unit_filter_vision" />
<fwd_tag name="location_filter_adjacent" />
<fwd_tag name="location_filter_vision" />

<type_alias name = "location_filter_wrapper"          type = "util::recursive_wrapper[location_filter]" />
<type_alias name = "side_filter_wrapper"              type = "util::recursive_wrapper[side_filter]" />
<type_alias name = "unit_adjacent_filter_wrapper"     type = "util::recursive_wrapper[unit_filter_adjacent]" />
<type_alias name = "unit_filter_vision_wrapper"       type = "util::recursive_wrapper[unit_filter_vision]" />
<type_alias name = "adjacent_location_filter_wrapper" type = "util::recursive_wrapper[location_filter_adjacent]" />
<type_alias name = "vision_filter_wrapper"            type = "util::recursive_wrapper[location_filter_vision]" />

<heterogenous_sequence name="unit_filter_children">
  <tag type="unit_filter_wrapper"          alias="filter" />
  <tag type="location_filter_wrapper"      alias="filter_location" />
  <tag type="side_filter_wrapper"          alias="filter_side" />
  <tag type="unit_adjacent_filter_wrapper" alias="filter_adjacent" />
  <tag type="unit_filter_vision_wrapper"   alias="filter_vision" />
  <tag type="unit_filter_wrapper"          alias="or" />
  <tag type="unit_filter_wrapper"          alias="and" />
  <tag type="unit_filter_wrapper"          alias="not" />
</heterogenous_sequence>

<heterogenous_sequence name="location_filter_children">
  <tag type="unit_filter_wrapper"              alias="filter" />
  <tag type="vision_filter_wrapper"            alias="filter_vision" />
  <tag type="side_filter_wrapper"              alias="filter_owner" />
  <tag type="location_filter_wrapper"          alias="filter_radius" />
  <tag type="adjacent_location_filter_wrapper" alias="filter_adjacent_locatin" />
  <tag type="location_filter_wrapper"          alias="or" />
  <tag type="location_filter_wrapper"          alias="and" />
  <tag type="location_filter_wrapper"          alias="not" />
</heterogenous_sequence>

<!-- Location filter definitions -->

<group name="LOCATION_FILTER_ATTRIBUTES">
  <member type="string_opt"      name="x" />
  <member type="string_opt"      name="y" />
  <member type="string_opt"      name="time_of_day" />
  <member type="string_list_val" name="time_of_day_id" />
  <member type="string_list_val" name="terrain" />
  <member type="string_opt"      name="area" />
  <member type="int_opt"         name="owner_side" />
  <member type="string_val"      name="find_in" />
  <member type="int_opt"         name="radius" />
</group>

<group name="LOCATION_FILTER_CHILDREN">
  <member type="location_filter_children" name="children" />
</group>

<tag name="location_filter">
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
</tag>

<tag name="location_filter_adjacent">
  <!-- member type="???" name="direction" -->
  <member type="string_opt" name="count" />
  <member type="string_opt" name="adjacent" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
</tag>

<tag name="location_filter_vision">
  <member type="bool_val" name="visible" default="true" />
  <member type="bool_val" name="respect_fog" default="true" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
</tag>

<tag name="store_locations">
  <member type="string_val" name="variable" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
</tag>

<!-- Unit filter definitions -->

<!-- TODO: Side should be an int_list -->
<group name="UNIT_FILTER_ATTRIBUTES">
  <member type="string_opt" name="id" />
  <member type="string_opt" name="speaker" />
  <member type="string_opt" name="type" />
  <member type="string_opt" name="race" />
  <member type="string_opt" name="ability" />
  <member type="string_list_val" name="side" />
  <member type="string_list_val" name="status" />
  <member type="bool_opt" name="has_weapon" />
  <member type="string_opt" name="gender" />
  <member type="string_opt" name="role" />
  <member type="string_opt" name="variation" />
  <member type="int_opt" name="level" />
  <member type="int_opt" name="defense" />
  <member type="int_opt" name="movement_cost" />
  <member type="int_opt" name="x" />
  <member type="int_opt" name="y" />
  <member type="string_opt" name="find_in" />
  <member type="string_opt" name="lua_function" />
  <member type="bool_opt" name="canrecruit" />
</group>

<group name="UNIT_FILTER_CHILDREN">
  <member type="unit_filter_children" name="children" />
  <member type="wml::raw_config" name="filter_wml" /> <!-- TODO -->
</group>

<tag name="unit_filter">
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<tag name="unit_filter_adjacent">
  <member type="string_val"      name="direction" />
  <member type="int_opt"         name="count" />
  <member type="string_list_val" name="adjacent" />
  <member type="bool_opt"        name="is_enemy" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<!-- Side filter definitions -->

<fwd_tag name="side_filter" />

<tag name="side_filter_has_unit">
  <member type="bool_val" name="search_recall_list" default="false" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<group name="SIDE_FILTER_ATTRIBUTES">
  <member type="string_opt" name="side" />
  <member type="string_opt" name="team_name" />
  <member type="string_opt" name="controller" />
</group>

<group name="SIDE_FILTER_CHILDREN">
  <member type="side_filter_has_unit" name="has_unit" />
  <member type="side_filter_wrapper" name="enemy_of" />
  <member type="side_filter_wrapper" name="allied_with" />
  <member type="side_filter_wrapper" name="has_enemy" />
  <member type="side_filter_wrapper" name="has_ally" />
</group>

<tag name="side_filter">
  <group name="SIDE_FILTER_ATTRIBUTES" />
  <group name="SIDE_FILTER_CHILDREN" />
</tag>

<tag name="unit_filter_vision">
  <member type="bool_val" name="visible" default="true" />
  <group name="SIDE_FILTER_ATTRIBUTES" />
  <group name="SIDE_FILTER_CHILDREN" />
</tag>

<!-- Store_X WML -->

<tag name="store_side">
  <member type="string_val" name="variable" />
  <group name="SIDE_FILTER_ATTRIBUTES" />
  <group name="SIDE_FILTER_CHILDREN" />
</tag>

<tag name="store_gold">
  <member type="string_val" name="variable" />
  <member type="string_list_val" name="side" />
</tag>

<tag name="store_starting_locations">
  <member type="string_val" name="variable" />
</tag>

<tag name="store_time_of_day">
  <member type="string_val" name="variable" />
</tag>

<tag name="store_turns">
  <member type="string_val" name="variable" />
</tag>

<tag name="modify_turns">
  <member type="int_opt" name="value" />
  <member type="int_opt" name="add" />
</tag>

<tag name="store_villages">
  <member type="string_val" name="variable" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
</tag>

<!-- specials WML -->

<tag cppname="specials_tag" name="specials" />

<!-- abilities WML -->

<tag cppname="abilities_tag" name="abilities" />

<!-- effect WML -->

<tag name="effect_set_specials">
  <member type="string_val" name="mode" />
</tag>

<tag cppname="effect_tag" name="effect">
  <member type="string_val" name="apply_to" />
  <member type="string_opt" name="times" />
  <member type="string_opt" name="name" />
  <member type="string_opt" name="description" />
  <member type="string_opt" name="type" />
  <member type="string_opt" name="range" />
  <member type="string_opt" name="portrait" />
  <member type="int_opt" name="add" />
  <member type="int_opt" name="increase" />
  <member type="int_opt" name="increase_total" />
  <member type="int_opt" name="damage" />
  <member type="int_opt" name="number" />
  <member type="int_opt" name="value" />
  <member type="int_opt" name="increase_attacks" />
  <member type="int_opt" name="increase_damage" />
  <member type="bool_opt" name="heal_full" />
  <member type="bool_opt" name="replace" />
  <member type="string_opt" name="set_description" />
  <member type="string_opt" name="set_name" />
  <member type="string_opt" name="set_type" />
  <member type="string_opt" name="set_icon" />
  <member type="string_to_int_map" name="movement_costs" />
  <member type="string_to_int_map" name="resistance" />
  <member type="string_to_int_map" name="defense" />
  <member type="util::optional[unit_filter]" name="filter" />
  <member type="util::optional[abilities_tag]" name="abilities" />
  <member type="util::optional[specials_tag]" name="specials" />
  <member type="util::optional[effect_set_specials]" name="set_specials" />
</tag>

<!-- trait -->

<tag name="trait">
  <member type="string_val" name="id" />
  <member type="string_opt" name="availability" />
  <member type="string_opt" name="male_name" />
  <member type="string_opt" name="female_name" />
  <member type="string_opt" name="name" />
  <member type="string_opt" name="description" />
  <member type="string_opt" name="effect" />
</tag>

<!-- Forward declarations for Conditional & Action WML

     condition_tag represents a tag that contains conditional wml
     action_tag represents a tag that contains action wml

     Many action_wml and conditional_tags can contain more action_wml or
     conditional wml, so a wrapper is necessary to break cycle.
-->

<fwd_tag name="condition_tag" />
<type_alias type="util::recursive_wrapper[condition_tag]" name="condition_wrapper" />

<fwd_tag name="action_tag" />
<type_alias type="util::recursive_wrapper[action_tag]" name="action_wrapper" />

<!-- Conditional WML -->

<tag cppname="true_tag" name="true" />
<tag cppname="false_tag" name="false" />

<tag name="have_unit">
  <member type="int_opt" name="count" />
  <member type="bool_val" name="search_recall_list" default="false" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<tag name="have_location">
  <member type="int_opt" name="count" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
</tag>

<tag cppname="variable_tag" name="variable">
  <member type="string_val" name="name" />
  <member type="string_opt" name="value" />
  <member type="string_opt" name="contains" />
  <member type="string_opt" name="equals" />
  <member type="string_opt" name="not_equals" />
  <member type="string_opt" name="numerical_equals" />
  <member type="string_opt" name="numerical_not_equals" />
  <member type="string_opt" name="greater_than" />
  <member type="string_opt" name="greater_than_equal_to" />
  <member type="string_opt" name="less_than" />
  <member type="string_opt" name="less_than_equal_to" />
  <member type="string_opt" name="boolean_equals" />
  <member type="string_opt" name="boolean_not_equals" />
</tag>

<heterogenous_sequence name="conditional_wml">
  <tag type="true_tag" alias="true" />
  <tag type="false_tag" alias="false" />
  <tag type="have_unit" alias="have_unit" />
  <tag type="have_location" alias="have_location" />
  <tag type="variable_tag" alias="variable" />
  <tag type="condition_wrapper" alias="or" />
  <tag type="condition_wrapper" alias="and" />
  <tag type="condition_wrapper" alias="not" />
</heterogenous_sequence>

<tag name="condition_tag">
  <member type="conditional_wml" name="conditionals" />
</tag>

<!-- Control flow wml -->

<tag cppname="if_tag" name="if">
  <member type="conditional_wml" name="conditionals" />
  <member type="util::optional[action_wrapper]" name="then_child" alias="then" />
  <member type="util::optional[action_wrapper]" name="else_child" alias="else" />
</tag>

<tag cppname="while_tag" name="while">
  <member type="conditional_wml" name="conditionals" />
  <member type="action_wrapper" name="actions" alias="do" />
</tag>

<fwd_tag name="case_tag" />

<tag cppname="switch_tag" name="switch">
  <member type="string_val" name="variable" />
  <member type="std::vector[util::recursive_wrapper[case_tag]]" alias="case" name="cases" />
  <member type="util::optional[action_wrapper]" alias="else" name="else_child" />
</tag>

<!-- Unit tag -->

<group name="UNIT_ATTRIBUTES">
  <member type="string_opt" name="type" />
  <member type="string_opt" name="parent_type" />
  <member type="int_val" name="side" default="1" />
  <member type="string_opt" name="gender" />
  <member type="int_val" name="x" default="0" />
  <member type="int_val" name="y" default="0" />
  <member type="string_list_val" name="placement" />
  <member type="string_opt" name="to_variable" />
  <member type="string_opt" name="id" />
  <member type="string_opt" name="name" />
  <member type="bool_val" name="generate_name" default="true" />
  <member type="bool_val" name="unrenamable" default="false" />
  <member type="string_opt" name="traits_description" />
  <member type="bool_val" name="random_traits" default="false" />
  <member type="bool_opt" name="random_gender" />
  <member type="bool_val" name="canrecruit" default="false" />
  <member type="string_list_val" name="extra_recruit" />
  <member type="string_opt" name="variation" />
  <member type="string_opt" name="upkeep" />
  <member type="string_list_val" name="overlays" />
  <member type="int_opt" name="goto_x" />
  <member type="int_opt" name="goto_y" />
  <member type="int_opt" name="hitpoints" />
  <member type="int_opt" name="hp_bar_scaling" />
  <member type="int_val" name="experience" default="0" />
  <member type="int_opt" name="moves" />
  <member type="int_val" name="attacks_left" default="1" />
  <member type="bool_val" name="resting" default="true" />
  <member type="string_opt" name="role" />
  <member type="string_opt" name="ai_special" />
  <member type="string_opt" name="facing" />
  <member type="string_opt" name="profile" />
  <member type="string_opt" name="small_profile" />
  <member type="int_opt" name="max_attacks" />
  <member type="int_opt" name="max_experience" />
  <member type="int_opt" name="max_hitpoints" />
  <member type="int_opt" name="max_moves" />
  <member type="bool_opt" name="animate" />
  <member type="string_opt" name="unit_description" />
  <member type="string_opt" name="description" />
</group>

<group name="UNIT_CHILDREN">
  <member type="util::optional[unit_filter]" name="filter_recall" />
  <member type="util::optional[unit_status]" name="status" />
  <member type="wml::raw_config"    name="variables" />
  <member type="unit_modifications" name="modifications" />
  <member type="unit_ai"            name="ai" />
  <member type="specials_tag"       name="specials" />
  <member type="abilities_tag"      name="abilities" />
</group>

<!-- action wml -->

<!-- complete -->
<tag name="item">
  <member type="int_val" name="x" default="0" />
  <member type="int_val" name="y" default="0" />
  <member type="string_val" name="image" />
  <member type="string_val" name="halo" />
  <member type="string_list_val" name="team_name" />
  <member type="bool_val" name="visible_in_fog" default="true" />
  <member type="bool_val" name="redraw" default="false" />
</tag>

<tag name="remove_item">
  <member type="string_opt" name="image" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
</tag>

<tag name="label">
  <member type="int_val" name="x" default="0" />
  <member type="int_val" name="y" default="0" />
  <member type="string_val" name="text" />
</tag>

<tag name="unit_status">
  <member type="bool_val" name="poisoned"   default="false" />
  <member type="bool_val" name="slowed"     default="false" />
  <member type="bool_val" name="petrified"  default="false" />
  <member type="bool_val" name="uncovered"  default="false" />
  <member type="bool_val" name="guardian"   default="false" />
  <member type="bool_val" name="unhealable" default="false" />
</tag>

<fwd_tag name="object" />

<tag name="unit_ai" />

<tag name="unit_modifications">
  <member type="std::vector[util::recursive_wrapper[object]]" name="object" />
  <member type="std::vector[util::recursive_wrapper[trait]]"  name="trait" />
</tag>

<tag name="unit">
  <group name="UNIT_ATTRIBUTES" />
  <group name="UNIT_CHILDREN" />
</tag>

<tag cppname="time_tag" name="time">
  <member type="string_val" name="id" />
  <member type="string_val" name="name" />
  <member type="string_val" name="image" />
  <member type="string_opt" name="mask" />
  <member type="int_val" name="lawful_bonus" default="0" />
  <member type="int_val" name="red" default="0" />
  <member type="int_val" name="green" default="0" />
  <member type="int_val" name="blue" default="0" />
  <member type="string_opt" name="sound" />
</tag>

<tag name="time_area">
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <member type="string_opt" name="id" />
  <member type="bool_val" name="remove" default="false" />
  <member type="int_val" name="current_time" default="0" />
  <group name="LOCATION_FILTER_CHILDREN" />
  <member type="time_tag" name="time" />
</tag>

<tag name="end_level">
  <member type="string_val" name="result" />
  <member type="bool_opt" name="bonus" />
  <member type="string_opt" name="next_scenario" />
  <member type="bool_val" name="carryover_report" default="true" />
  <member type="bool_val" name="replay_save" default="true" />
  <member type="bool_val" name="save" default="true" />
  <member type="bool_val" name="linger_mode" default="true" />
  <member type="bool_val" name="reveal_map" default="true" />
  <member type="int_opt" name="carryover_percentage" />
  <member type="int_opt" name="carryover_add" />
  <member type="string_list_val" name="music" />
  <member type="bool_val" name="credits" default="true" />
  <member type="string_opt" name="end_text" />
  <member type="int_opt" name="end_text_duration" />
</tag>

<tag name="print_tag">
  <member type="string_val" name="text" />
  <member type="int_opt" name="red" />
  <member type="int_opt" name="green" />
  <member type="int_opt" name="blue" />
  <member type="int_val" name="size" default="12" />
  <member type="int_val" name="duration" default="50" />
</tag>

<tag name="lua">
  <member type="string_val" name="code" />
</tag>

<tag name="clear_variable">
  <member type="string_val" name="name" />
</tag>

<tag name="set_variable_join">
  <member type="string_val" name="variable" />
  <member type="string_val" name="key" />
  <member type="string_val" name="separator" />
  <member type="bool_opt" name="remove_empty" />
</tag>

<tag name="set_variable">
  <member type="string_val" name="name" />
  <member type="string_opt" name="value" />
  <member type="string_opt" name="literal" />
  <member type="string_opt" name="to_variable" />
  <member type="string_opt" name="add" />
  <member type="string_opt" name="sub" />
  <member type="string_opt" name="multiply" />
  <member type="string_opt" name="divide" />
  <member type="string_opt" name="modulo" />
  <member type="string_opt" name="rand" />
  <member type="string_opt" name="time_stamp" />
  <member type="string_opt" name="string_length" />
  <member type="string_opt" name="ipart" />
  <member type="string_opt" name="fpart" />
  <member type="string_opt" name="round" />
  <member type="set_variable_join" name="join" />
</tag>

<tag name="set_variables_split">
  <member type="string_opt" name="list" />
  <member type="string_val" name="key" />
  <member type="string_opt" name="separator" />
  <member type="bool_opt" name="remove_empty" />
</tag>

<tag name="set_variables">
  <member type="string_val" name="name" />
  <member type="string_opt" name="mode" />
  <member type="string_opt" name="to_variable" />
  <member type="wml::raw_config" name="value" />
  <member type="wml::raw_config" name="literal" />
  <member type="set_variables_split" name="split" />
</tag>

<tag name="fire_event">
  <member type="string_val" name="name" />
  <member type="unit_filter" name="primary_unit" />
  <member type="unit_filter" name="secondary_unit" />
  <member type="wml::raw_config" name="primary_attack" />
  <member type="wml::raw_config" name="secondary_attack" />
</tag>

<tag name="remove_event">
  <member type="string_list_val" name="id" />
</tag>

<tag name="terrain_tag">
  <member type="string_opt" name="layer" />
  <member type="bool_val" name="replace_if_failed" default="false" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
</tag>

<tag name="terrain_mask_rule_tag" />

<tag name="terrain_mask_tag">
  <member type="string_val" name="mask" />
  <member type="bool_opt" name="border" />
  <member type="terrain_mask_rule_tag" name="rule" />
</tag>

<tag name="gold">
  <member type="int_val" name="amount" default="0" />
  <group name="SIDE_FILTER_ATTRIBUTES" />
  <group name="SIDE_FILTER_CHILDREN" />
</tag>

<tag name="allow_recruit">
  <member type="string_list_val" name="type" />
  <group name="SIDE_FILTER_ATTRIBUTES" />
  <group name="SIDE_FILTER_CHILDREN" />
</tag>
 
<tag name="allow_extra_recruit">
  <member type="string_list_val" name="extra_recruit" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<tag name="disallow_recruit">
  <member type="string_list_val" name="type" />
  <group name="SIDE_FILTER_ATTRIBUTES" />
  <group name="SIDE_FILTER_CHILDREN" />
</tag>

<tag name="disallow_extra_recruit">
  <member type="string_list_val" name="extra_recruit" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<tag name="set_recruit">
  <member type="string_list_val" name="recruit" />
  <group name="SIDE_FILTER_ATTRIBUTES" />
  <group name="SIDE_FILTER_CHILDREN" />
</tag>

<tag name="set_extra_recruit">
  <member type="string_list_val" name="extra_recruit" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<tag name="modify_side_ai" />

<tag name="modify_side">
  <member type="int_opt" name="income" />
  <member type="int_opt" name="side" />
  <member type="int_opt" name="gold" />
  <member type="int_opt" name="village_gold" />
  <member type="string_list_val" name="recruit" />
  <member type="string_list_val" name="team_name" />
  <member type="string_opt" name="user_team_name" />
  <member type="string_opt" name="controller" />
  <member type="bool_opt" name="fog" />
  <member type="bool_opt" name="shroud" />
  <member type="bool_opt" name="hidden" />
  <member type="string_opt" name="color" />
  <member type="string_opt" name="switch_ai" />
  <member type="bool_opt" name="reset_maps" />
  <member type="bool_opt" name="reset_view" />
  <member type="bool_opt" name="share_maps" />
  <member type="bool_opt" name="share_view" />
  <member type="string_opt" name="shroud_data" />
  <member type="bool_opt" name="suppress_end_turn_confirmation" />
  <member type="bool_opt" name="scroll_to_leader" />
  <member type="int_opt" name="village_support" />
  <member type="modify_side_ai" name="ai" />
  <member type="side_filter" name="filter_side" />
</tag>

<tag name="modify_unit">
  <group name="UNIT_ATTRIBUTES" />
  <member type="unit_filter" name="filter" />
  <member type="unit_modifications" name="modifications" />
  <member type="string_to_int_map" name="movement_costs" />
  <member type="string_to_int_map" name="resistances" />
  <member type="string_to_int_map" name="defense" />
  <member type="wml::raw_config" name="variables" />
</tag>

<tag name="store_unit">
  <member type="bool_val" name="kill" default="false" />
  <member type="string_val" name="variable" />
  <member type="string_opt" name="mode" />
  <member type="unit_filter" name="filter" />
</tag>

<tag name="unstore_unit">
  <member type="string_val" name="variable" />
  <member type="bool_val" name="find_vacant" default="false" />
  <member type="bool_val" name="check_passability" default="true" />
  <member type="string_opt" name="text" />
  <member type="int_val" name="red" default="0" />
  <member type="int_val" name="blue" default="0" />
  <member type="int_val" name="green" default="0" />
  <member type="bool_val" name="advance" default="true" />
  <member type="bool_val" name="fire_event" default="false" />
  <member type="bool_val" name="animate" default="true" />
  <member type="string_opt" name="x" />
  <member type="string_opt" name="y" />
</tag>

<tag name="transform_unit">
  <member type="string_opt" name="transform_to" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<tag name="harm_unit">
  <member type="string_opt" name="alignment" />
  <member type="bool_opt" name="animate" />
  <member type="int_opt" name="amount" />
  <member type="string_opt" name="damage_type" />
  <member type="bool_opt" name="kill" />
  <member type="bool_opt" name="poisoned" />
  <member type="bool_opt" name="slowed" />
  <member type="unit_filter" name="filter" />
  <member type="unit_filter" name="filter_second" />
  <member type="attack_filter" name="primary_attack" />
</tag>

<!--// TODO: fix this-->
<tag name="heal_unit">
  <member type="string_opt" name="alignment" />
  <member type="bool_opt" name="animate" />
  <member type="int_opt" name="amount" />
  <member type="string_opt" name="damage_type" />
  <member type="bool_opt" name="kill" />
  <member type="bool_opt" name="poisoned" />
  <member type="bool_opt" name="slowed" />
  <member type="bool_opt" name="restore_statuses" />
  <member type="unit_filter" name="filter" />
  <member type="unit_filter" name="filter_second" />
  <member type="attack_filter" name="primary_attack" />
</tag>

<tag name="kill">
  <member type="bool_val" name="animate" default="false" />
  <member type="bool_val" name="fire_event" default="false" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
  <member type="unit_filter" name="secondary_unit" />
</tag>

<tag name="move_unit">
  <member type="int_opt" name="to_x" />
  <member type="int_opt" name="to_y" />
  <member type="bool_val" name="fire_event" default="false" />
  <member type="bool_val" name="check_passability" default="true" />
  <member type="bool_val" name="force_scroll" default="false" />
</tag>

<tag name="move_unit_fake">
  <member type="string_val" name="type" />
  <member type="string_list_val" name="x" />
  <member type="string_list_val" name="y" />
  <member type="int_opt" name="side" />
  <member type="string_opt" name="gender" />
  <member type="string_opt" name="variation" />
  <member type="string_val" name="image_mods" />
  <member type="bool_val" name="force_scroll" default="false" />
</tag>

<tag name="move_units_fake_fake_unit">
  <member type="string_val" name="type" />
  <member type="string_list_val" name="x" />
  <member type="string_list_val" name="y" />
  <member type="int_opt" name="side" />
  <member type="int_opt" name="skip_steps" />
</tag>

<tag name="move_units_fake">
</tag>

<!--
//  move_units_fake_fake_unit, fake_unit" />
// TODO: Fix ^ -->

<tag name="teleport">
  <member type="bool_val" name="clear_shroud" default="true" />
  <member type="bool_val" name="animate" default="true" />
  <member type="bool_val" name="check_passability" default="true" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<fwd_tag name="animate_unit" />

<tag name="animate_unit">
  <member type="string_opt" name="flag" />
  <member type="string_val" name="hits" />
  <member type="string_val" name="text" />
  <member type="int_opt" name="red" />
  <member type="int_opt" name="green" />
  <member type="int_opt" name="blue" />
  <member type="bool_opt" name="with_bars" />
  <member type="unit_filter" name="filter" />
  <member type="attack_filter" name="primary_attack" />
  <member type="attack_filter" name="secondary_attack" />
  <member type="util::recursive_wrapper[animate_unit]" name="animate" />
  <member type="location_filter" name="facing" />
</tag>

<tag name="recall">
  <member type="bool_val" name="show" default="true" />
  <member type="bool_val" name="fire_event" default="false" />
  <member type="bool_val" name="check_passability" default="true" />
  <member type="bool_opt" name="animate" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<tag name="place_shroud">
  <member type="int_opt" name="side" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
</tag>

<tag name="remove_shroud">
  <member type="int_opt" name="side" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
</tag>

<tag name="lift_fog">
  <member type="bool_val" name="multiturn" default="false" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
  <member type="side_filter" name="filter_side" />
</tag>

<tag name="reset_fog">
  <member type="bool_val" name="reset_view" default="false" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
  <member type="util::optional[side_filter]" name="filter_side" />
</tag>

<tag name="redraw">
  <member type="bool_val" name="clear_shroud" default="false" />
  <group name="SIDE_FILTER_ATTRIBUTES" />
  <group name="SIDE_FILTER_CHILDREN" />
</tag>

<fwd_tag name="condition_tag" />

<tag name="objectives_objective">
  <member type="string_val" name="condition" />
  <member type="string_val" name="description" />
  <member type="bool_opt" name="show_turn_counter" />
  <member type="util::recursive_wrapper[wml::condition_tag]" name="show_if" />
</tag>

<tag name="objectives_gold_carryover">
  <member type="bool_opt" name="bonus" />
  <member type="int_opt" name="carryover_percentage" />
</tag>

<tag name="objectives_note">
  <member type="string_val" name="description" />
</tag>

<tag name="objectives">
  <member type="bool_opt" name="silent" />
  <member type="bool_opt" name="show" />
  <member type="int_opt" name="side" />
  <member type="string_val" name="summary" />
  <member type="util::recursive_wrapper[wml::condition_tag]" name="show_if" />
  <member type="objectives_objective" name="objective" />
  <member type="objectives_note" name="note" />
  <member type="objectives_gold_carryover" name="gold_carryover" />
</tag>

<tag name="show_objectives" />

<tag name="music">
  <member type="string_val" name="name" />
  <member type="bool_val" name="play_once" default="true" />
  <member type="bool_val" name="immediate" default="false" />
  <member type="bool_val" name="append" default="true" />
  <member type="int_opt" name="ms_before" />
</tag>

<tag name="sound">
  <member type="string_val" name="name" />
</tag>

<tag name="delay">
  <member type="int_val" name="time" default="0" />
  <member type="bool_val" name="accelerate" default="false" />
</tag>

<tag name="volume">
  <member type="int_opt" name="music" />
  <member type="int_opt" name="sound" />
</tag>

<tag name="color_adjust">
  <member type="int_opt" name="red" />
  <member type="int_opt" name="blue" />
  <member type="int_opt" name="green" />
</tag>

<tag name="scroll">
  <member type="int_opt" name="x" />
  <member type="int_opt" name="y" />
  <group name="SIDE_FILTER_ATTRIBUTES" />
  <group name="SIDE_FILTER_CHILDREN" />
</tag>

<tag name="scroll_to">
  <member type="int_val" name="x" default="0" />
  <member type="int_val" name="y" default="0" />
  <group name="SIDE_FILTER_ATTRIBUTES" />
  <group name="SIDE_FILTER_CHILDREN" />
</tag>
  
<tag name="scroll_to_unit">
  <member type="bool_val" name="check_fogged" default="false" />
  <member type="bool_val" name="immediate"    default="false" />
  <!-- string_list_val, for_side -->
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
  <member type="side_filter" name="for_side" />
</tag>

<tag name="message_option">
  <member type="string_val" name="message" />
  <member type="condition_tag" name="show_if" />
  <member type="action_wrapper" name="command" />
</tag>

<tag name="message_text_input">
  <member type="string_val" name="variable" />
  <member type="string_opt" name="label" />
  <member type="int_opt" name="max_text_length" />
  <member type="string_opt" name="text" />
</tag>

<tag name="message_tag">
  <member type="string_opt" name="image" />
  <member type="string_opt" name="message" />
  <member type="string_opt" name="caption" />
  <member type="int_opt"    name="duration" />
  <member type="string_opt" name="side_for" />
  <member type="bool_val"   name="scroll" default="true" />
  <member type="string_opt" name="sound" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
  <member type="util::optional[condition_tag]" name="show_if" />
  <member type="std::vector[message_option]" name="option" />
  <member type="util::optional[message_text_input]" name="text_input" />
</tag>

<tag name="end_turn" />

<tag name="object">
  <member type="bool_opt" name="silent" />
  <member type="string_opt" name="description" />
  <member type="string_opt" name="image" />
  <member type="string_opt" name="duration" />
  <member type="string_opt" name="name" />
  <member type="string_opt" name="id" />
  <member type="util::optional[unit_filter]" name="filter" />
  <member type="util::optional[effect_tag]" name="effect" />
</tag>

<tag name="capture_village">
  <member type="int_opt" name="side" />
  <member type="bool_val" name="fire_event" default="false" />
  <group name="LOCATION_FILTER_ATTRIBUTES" />
  <group name="LOCATION_FILTER_CHILDREN" />
</tag>

<tag name="allow_undo" />
<tag name="lock_view" />
<tag name="unlock_view" />

<tag name="micro_ai">
  <member type="string_opt" name="action" />
  <member type="string_opt" name="ai_type" />
  <member type="string_opt" name="side" />
  <member type="string_opt" name="weapon" />
  <member type="int_opt" name="waypoint_x" />
  <member type="int_opt" name="waypoint_y" />
  <member type="bool_opt" name="injured_units_only" />
  <member type="util::optional[unit_filter]" name="filter" />
  <member type="util::optional[unit_filter]" name="filter_second" />
  <member type="util::optional[location_filter]" name="filter_location" />
  <member type="util::optional[location_filter]" name="filter_location_wander" />
</tag>

<tag name="unit_overlay">
  <member type="string_val" name="image" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<tag name="remove_unit_overlay">
  <member type="string_val" name="image" />
  <group name="UNIT_FILTER_ATTRIBUTES" />
  <group name="UNIT_FILTER_CHILDREN" />
</tag>

<tag name="set_menu_item">
  <member type="string_val" name="id" />
  <member type="string_opt" name="description" />
  <member type="string_opt" name="icon" />
  <member type="condition_tag" name="show_if" />
  <member type="action_wrapper" name="command" />
</tag>

<tag name="spawn_units" />

<fwd_tag name="event_tag" />

<heterogenous_sequence name="action_wml">
  <tag type="util::recursive_wrapper[wml::event_tag]" alias="event" />
  <tag type="util::recursive_wrapper[wml::action_tag]" alias="command" />
  <tag type="wml::if_tag" alias="if" />
  <tag type="wml::while_tag" alias="while" />
  <tag type="wml::switch_tag" alias="switch" />
  <tag type="wml::set_variable" alias="set_variable" />
  <tag type="wml::set_variables" alias="set_variables" />
  <tag type="wml::clear_variable" alias="clear_variable" />
  <tag type="wml::allow_recruit" alias="allow_recruit" />
  <tag type="wml::disallow_recruit" alias="disallow_recruit" />
  <tag type="wml::set_recruit" alias="set_recruit" />
  <tag type="wml::allow_extra_recruit" alias="allow_extra_recruit" />
  <tag type="wml::disallow_extra_recruit" alias="disallow_extra_recruit" />
  <tag type="wml::set_extra_recruit" alias="set_extra_recruit" />
  <tag type="wml::recall" alias="recall" />
  <tag type="wml::gold" alias="gold" />
  <tag type="wml::message_tag" alias="message" />
  <tag type="wml::store_unit" alias="store_unit" />
  <tag type="wml::unstore_unit" alias="unstore_unit" />
  <tag type="wml::transform_unit" alias="transform_unit" />
  <tag type="wml::unit_overlay" alias="unit_overlay" />
  <tag type="wml::remove_unit_overlay" alias="remove_unit_overlay" />
  <tag type="wml::kill" alias="kill" />
  <tag type="wml::harm_unit" alias="harm_unit" />
  <tag type="wml::heal_unit" alias="heal_unit" />
  <tag type="wml::move_unit" alias="move_unit" />
  <tag type="wml::move_unit_fake" alias="move_unit_fake" />
  <tag type="wml::move_units_fake" alias="move_units_fake" />
  <tag type="wml::spawn_units" alias="spawn_units" />
  <tag type="wml::store_gold" alias="store_gold" />
  <tag type="wml::store_locations" alias="store_locations" />
  <tag type="wml::store_side" alias="store_side" />
  <tag type="wml::store_starting_locations" alias="store_starting_locations" />
  <tag type="wml::store_time_of_day" alias="store_time_of_day" />
  <tag type="wml::store_villages" alias="store_villages" />
  <tag type="wml::store_turns" alias="store_turns" />
  <tag type="wml::modify_turns" alias="modify_turns" />
  <tag type="wml::end_level" alias="endlevel" />
  <tag type="wml::end_turn" alias="end_turn" />
  <tag type="wml::capture_village" alias="capture_village" />
  <tag type="wml::teleport" alias="teleport" />
  <tag type="wml::music" alias="music" />
  <tag type="wml::sound" alias="sound" />
  <tag type="wml::volume" alias="volume" />
  <tag type="wml::delay" alias="delay" />
  <tag type="wml::color_adjust" alias="color_adjust" />
  <tag type="wml::scroll" alias="scroll" />
  <tag type="wml::scroll_to" alias="scroll_to" />
  <tag type="wml::scroll_to_unit" alias="scroll_to_unit" />
  <tag type="wml::print_tag" alias="print" />
  <tag type="wml::terrain_tag" alias="terrain" />
  <tag type="wml::terrain_mask_tag" alias="terrain_mask" />
  <tag type="wml::modify_side" alias="modify_side" />
  <tag type="wml::modify_unit" alias="modify_unit" />
  <tag type="wml::unit_filter" alias="petrify" />
  <tag type="wml::unit_filter" alias="unpetrify" />
  <tag type="wml::unit_filter" alias="hide_unit" />
  <tag type="wml::unit_filter" alias="unhide_unit" />
  <tag type="wml::objectives" alias="objectives" />
  <tag type="wml::show_objectives" alias="show_objectives" />
  <tag type="wml::lua" alias="lua" />
  <tag type="wml::fire_event" alias="fire_event" />
  <tag type="wml::remove_event" alias="remove_event" />
  <tag type="wml::label" alias="label" />
  <tag type="wml::time_area" alias="time_area" />
  <tag type="wml::unit" alias="unit" />
  <tag type="wml::object" alias="object" />
  <tag type="wml::item" alias="item" />
  <tag type="wml::remove_item" alias="remove_item" />
  <tag type="wml::place_shroud" alias="place_shroud" />
  <tag type="wml::remove_shroud" alias="remove_shroud" />
  <tag type="wml::lift_fog" alias="lift_fog" />
  <tag type="wml::reset_fog" alias="reset_fog" />
  <tag type="wml::allow_undo" alias="allow_undo" />
  <tag type="wml::lock_view" alias="lock_view" />
  <tag type="wml::unlock_view" alias="unlock_view" />
  <tag type="wml::teleport" alias="teleport" />
  <tag type="wml::redraw" alias="redraw" />
  <tag type="wml::unit_filter" alias="role" />
  <tag type="wml::animate_unit" alias="animate_unit" />
  <tag type="wml::micro_ai" alias="micro_ai" />
  <tag type="wml::set_menu_item" alias="set_menu_item" />
</heterogenous_sequence>

<tag name="action_tag">
  <member type="action_wml" name="actions" />
</tag>

<tag name="case_tag">
  <member type="string_list_val" name="value" />
    <!-- TODO: What value should be used here? -->
  <member type="action_wml" name="actions" />
</tag>

<tag cppname="event_tag" name="event">
  <member type="string_val"                  name="name" />
  <member type="string_val"                  name="id" />
  <member type="string_opt"                  name="remove" />
  <member type="bool_val"                    name="first_time_only" default="true" />
  <member type="bool_val"                    name="delayed_variable_substitution" default="true" />
  <member type="util::optional[unit_filter]" name="filter" />
  <member type="util::optional[unit_filter]" name="filter_second" />
  <member type="util::optional[attack_filter]" name="filter_attack" />
  <member type="util::optional[attack_filter]" name="filter_second_attack" />
</tag>

<!-- Terrain WML -->

<tag name="terrain_type">
  <member type="string_val" name="symbol_image" />
  <member type="string_val" name="editor_image" />
  <member type="string_val" name="editor_group" />
  <member type="string_val" name="id" />
  <member type="string_val" name="name" />
  <member type="string_val" name="description" />
  <member type="string_val" name="editor_name" />
  <member type="string_val" name="string" />
  <member type="int_val"    name="light" default="0" />
  <member type="int_val"    name="min_light" default="0" />
  <member type="int_val"    name="max_light" default="0" />
  <member type="int_opt"    name="unit_height_adjust" />
  <member type="bool_opt"   name="heals" />
  <member type="bool_opt"   name="submerge" />
  <member type="bool_opt"   name="no_overlay" />
  <member type="bool_val"   name="gives_income" default="false" />
  <member type="bool_val"   name="recruit_onto" default="false" />
  <member type="bool_val"   name="recruit_from" default="false" />
  <member type="string_val" name="aliasof" />
  <member type="string_val" name="def_alias" />
  <member type="string_val" name="mvt_alias" />
  <member type="bool_val"   name="hidden" default="false" />
  <member type="bool_val"   name="hide_help" default="false" />
</tag>

<!-- [terrain_graphics] -->

<tag name="terrain_graphics_tile_image_variant">
  <member type="string_list_val" name="tod" />
  <member type="string_opt"      name="name" />
  <member type="bool_val"        name="random_start" default="true" />
  <member type="string_list_val" name="has_flag" />
</tag>

<tag name="terrain_graphics_tile_image">
  <member type="int_val" name="layer" default="0" />
  <member type="string_opt" name="name" />
  <member type="bool_val" name="random_start" default="true" />
  <member type="int_pair_opt" name="base" />
  <member type="util::optional[terrain_graphics_tile_image_variant]" name="variant" />
</tag>

<tag name="terrain_graphics_tile">
  <member type="int_opt" name="x" />
  <member type="int_opt" name="y" />
  <member type="int_opt" name="pos" />
  <member type="string_list_val" name="type" />
  <member type="string_opt" name="name" />
  <member type="string_list_val" name="set_flag" />
  <member type="string_list_val" name="has_flag" />
  <member type="string_list_val" name="no_flag" />
  <member type="string_list_val" name="set_no_flag" />
  <member type="terrain_graphics_tile_image" name="image" />
</tag>

<tag name="terrain_graphics_image">
  <member type="int_val" name="layer" default="0" />
  <member type="string_opt" name="name" />
  <member type="bool_val" name="random_start" default="true" />
  <member type="int_pair_opt" name="base" />
  <member type="int_pair_opt" name="center" />
</tag>

<tag name="terrain_graphics">
  <member type="int_opt" name="x" />
  <member type="int_opt" name="y" />
  <member type="int_opt" name="mod_x" />
  <member type="int_opt" name="mod_y" />
  <member type="int_val" name="probability" default="100" />
  <member type="string_list_val" name="rotations" />
  <member type="string_list_val" name="set_flag" />
  <member type="string_list_val" name="has_flag" />
  <member type="string_list_val" name="no_flag" />
  <member type="string_list_val" name="set_no_flag" />
  <member type="string_opt" name="map" />
  <member type="terrain_graphics_tile" name="tile" />
  <member type="terrain_graphics_image" name="image" />
</tag>

<!-- UNITS -->


<group name="MOVE_TYPE_CHILDREN">
  <member type="string_to_int_map" name="movement_costs" />
  <member type="string_to_int_map" name="vision_costs" />
  <member type="string_to_int_map" name="defense" />
  <member type="string_to_int_map" name="resistance" />
</group>

<!-- unit_type -->

<tag name="unit_type_advancement">
  <member type="string_val" name="id" />
  <member type="bool_val" name="always_display" default="false" />
  <member type="string_val" name="description" />
  <member type="string_val" name="image" />
  <member type="int_val" name="max_times" default="1" />
  <member type="bool_val" name="strict_amla" default="false" />
  <member type="string_list_val" name="require_amla" />
  <member type="util::optional[effect_tag]" name="effect" />
</tag>

<tag name="unit_type_attack">
  <member type="string_val" name="description" />
  <member type="string_val" name="name" />
  <member type="string_val" name="type" />
  <member type="string_val" name="icon" />
  <member type="string_val" name="range" />
  <member type="int_val" name="damage" default="0" />
  <member type="int_val" name="number" default="0" />
  <member type="int_opt" name="movement_used" />
  <member type="int_opt" name="attack_weight" />
  <member type="int_opt" name="defense_weight" />
  <member type="abilities_tag" name="abilities" />
  <member type="specials_tag" name="specials" />
</tag>

<tag name="unit_type_portrait" />

<group name="UNIT_TYPE_COMMON_ATTRIBUTES">
  <member type="string_list_val" name="advances_to" />
  <member type="string_opt" name="alignment" />
  <member type="int_opt" name="attacks" />
  <member type="int_val" name="cost" default="0" />
  <member type="string_val" name="description" />
  <member type="string_val" name="ellipse" />
  <member type="int_val" name="experience" default="1" />
  <member type="string_val" name="flag_rgb" />
  <member type="string_val" name="gender" />
  <member type="string_opt" name="halo" />
  <member type="bool_val" name="hide_help" default="false" />
  <member type="int_val" name="hitpoints" default="1" />
  <member type="string_val" name="id" />
  <member type="bool_val" name="ignore_race_traits" default="false" />
  <member type="string_val" name="image" />
  <member type="string_val" name="image_icon" />
  <member type="int_val" name="level" default="0" />
  <member type="int_val" name="movement" default="0" />
  <member type="string_opt" name="movement_type" />
  <member type="string_opt" name="name" />
  <member type="int_opt" name="num_traits" />
  <member type="string_opt" name="portrait" />
  <member type="string_opt" name="profile" />
  <member type="string_opt" name="small_portrait" />
  <member type="string_val" name="race" />
  <member type="string_opt" name="undead_variation" />
  <member type="string_opt" name="usage" />
  <member type="int_opt" name="vision" />
  <member type="bool_opt" name="zoc" />
  <member type="string_opt" name="die_sound" />
  <member type="string_opt" name="heal_sound" />
</group>

<group name="UNIT_TYPE_COMMON_CHILDREN">
  <member type="event_tag" name="event" />
  <group name="MOVE_TYPE_CHILDREN" />
  <member type="animation_tag" name="movement_anim" />
  <member type="animation_tag" name="attack_anim" />
  <member type="animation_tag" name="defend" />
  <member type="animation_tag" name="death" />
  <member type="animation_tag" name="healing_anim" />
  <member type="animation_tag" name="idle_anim" />
  <member type="animation_tag" name="leading_anim" />
  <member type="animation_tag" name="recruiting_anim" />
  <member type="animation_tag" name="standing_anim" />
  <member type="util::optional[abilities_tag]" name="abilities" />
  <member type="std::vector[unit_type_advancement]" name="advancement" />
</group>

<!--  (unit_type_portrait, portrait) -->

<tag name="unit_type_base_unit">
  <member type="string_val" name="id" />
</tag>
<!--
  <group name="UNIT_TYPE_COMMON_ATTRIBUTES" />
  <group name="UNIT_TYPE_COMMON_CHILDREN" />
-->

<tag name="unit_type_variation">
  <member type="string_val" name="variation_id" />
  <member type="string_val" name="variation_name" />
  <member type="bool_val" name="inherit" default="false" />
  <group name="UNIT_TYPE_COMMON_ATTRIBUTES" />
  <group name="UNIT_TYPE_COMMON_CHILDREN" />
  <member type="std::vector[unit_type_attack]" name="attack" />
</tag>

<tag name="unit_type_gender_variation">
  <member type="bool_val" name="inherit" default="true" />
  <group name="UNIT_TYPE_COMMON_ATTRIBUTES" />
  <group name="UNIT_TYPE_COMMON_CHILDREN" />
  <member type="std::vector[unit_type_attack]" name="attack" />
  <member type="std::vector[unit_type_variation]" name="variation" />
</tag>

<tag name="unit_type">
  <member type="bool" name="do_not_list" default="false" />
  <group name="UNIT_TYPE_COMMON_ATTRIBUTES" />
  <group name="UNIT_TYPE_COMMON_CHILDREN" />
  <member type="animation_tag" name="animation" />
  <member type="std::vector[unit_type_attack]" name="attack" />
  <member type="util::optional[unit_type_base_unit]" name="base_unit" />
  <member type="std::vector[unit_type_variation]" name="variation" />
  <member type="std::vector[unit_type_gender_variation]" name="male" />
  <member type="std::vector[unit_type_gender_variation]" name="female" />
</tag>

<!-- [move_type] -->

<tag name="move_type">
  <member type="string_val" name="id" />
  <member type="string_opt" name="name" />
  <member type="bool_val" name="flies" default="false" />
</tag>

<!-- [race] -->

<tag name="race">
  <member type="string_val" name="id" />
  <member type="string_val" name="plural_name" />
  <member type="string_opt" name="male_name" />
  <member type="string_opt" name="female_name" />
  <member type="string_opt" name="name" />
  <member type="string_val" name="description" />
  <member type="string_list_val" name="male_names" />
  <member type="string_list_val" name="female_names" />
  <member type="int_val" name="markov_chain_size" default="2" />
  <member type="int_val" name="num_traits" default="2" />
  <member type="bool_val" name="ignore_global_traits" default="false" />
  <member type="string_opt" name="undead_variation" />
  <member type="util::optional[trait]" name="trait" />
</tag>

<!-- units -->

<tag name="units">
  <member type="std::vector[unit_type]" name="unit_type" />
  <member type="std::vector[trait]" name="trait" />
  <member type="std::vector[move_type]" name="move_type" />
  <member type="std::vector[race]" name="race" />
</tag>

<!-- scenario -->

<tag name="village">
  <member type="int_val" name="x" default="0" />
  <member type="int_val" name="y" default="0" />
</tag>

<tag name="side_ai_aspect">
  <member type="string_val" name="id" />
  <member type="wml::raw_config" name="facet" />
</tag>

<tag name="side_ai_goal">
  <member type="string_val" name="name" />
  <member type="int_opt" name="value" />
  <member type="int_opt" name="protect_radius" />
  <member type="wml::raw_config" name="criteria" />
</tag>

<tag name="side_ai">
  <member type="int_opt" name="villages_per_scout" />
  <member type="int_opt" name="village_value" />
  <member type="int_opt" name="aggression" />
  <member type="string_opt" name="recruitment_pattern" />
  <member type="string_opt" name="ai_algorithm" />
  <member type="int_opt" name="caution" />
  <member type="int_opt" name="leader_value" />
  <member type="int_opt" name="attack_depth" />
  <member type="string_opt" name="grouping" />
  <member type="string_opt" name="time_of_day" />
  <member type="bool_val" name="passive_leader" default="false" />
  <member type="bool_val" name="passive_leader_shares_keep" default="false" />
  <member type="int_opt" name="leader_aggression" />
  <member type="int_opt" name="scout_village_targetting" />
  <member type="bool_val" name="simple_targetting" default="false"/>
  <member type="bool_val" name="recruitment_ignore_bad_movement" default="false"/>
  <member type="bool_val" name="recruitment_ignore_bad_combat" default="false"/>
  <!-- //  (bool_def_false, recruitment_ignore_bad_recruit) -->
  <member type="int_opt" name="turns" />
  <member type="wml::raw_config" name="attacks" />
  <member type="wml::raw_config" name="avoid" />
  <member type="std::vector[side_ai_goal]" name="goal" />
  <member type="std::vector[side_ai_aspect]" name="aspect" />
  <member type="wml::raw_config" name="leader_goal" />
</tag>

<tag name="side_tag">
  <member type="string_val" name="controller" />
  <member type="string_opt" name="ai_algorithm" />
  <member type="bool_val" name="no_leader" default="false" />
  <member type="string_list_val" name="recruit" />
  <member type="int_val" name="gold" default="100" />
  <member type="int_val" name="income" default="0" />
  <member type="bool_val" name="hidden" default="false" />
  <member type="bool_val" name="fog" default="true" />
  <member type="bool_val" name="shroud" default="true" />
  <member type="bool_opt" name="persistent" />
  <member type="string_opt" name="save_id" />
  <member type="string_list_val" name="team_name" />
  <member type="string_val" name="user_team_name" />
  <member type="string_val" name="current_player" />
  <member type="string_opt" name="color" />
  <member type="string_opt" name="flag" />
  <member type="string_opt" name="flag_icon" />
  <member type="int_opt" name="village_gold" />
  <member type="bool_val" name="share_maps" default="false" />
  <member type="bool_val" name="share_view" default="false" />
  <member type="bool_val" name="share_vision" default="false" />
  <member type="bool_val" name="scroll_to_leader" defaul="true" />
  <member type="bool_val" name="suppress_end_turn_confirmation" default="false" />
  <member type="string_opt" name="image" />
  <member type="string_val" name="defeat_condition" />
  <member type="bool_val" name="allow_player" default="true" />
  <member type="bool_val" name="disallow_observers" default="false" />
  <member type="bool_val" name="disallow_shuffle" default="false" />
  <member type="bool_opt" name="faction_from_recruit" />
  <member type="bool_opt" name="gold_lock" />
  <member type="bool_opt" name="income_lock" />
  <member type="bool_opt" name="team_lock" />
  <group name="UNIT_ATTRIBUTES" />
  <member type="util::optional[side_ai]" name="ai" />
  <member type="std::vector[side_ai_goal]" name="goal" />
  <member type="std::vector[village]" name="village" />
  <member type="std::vector[unit]" name="unit" />
  <member type="util::optional[struct unit]" name="leader" />
  <member type="unit_modifications" name="modifications" />
  <member type="util::optional[wml::raw_config]" name="variables" />

</tag>

<tag name="scenario_tag">
  <member type="string_val" name="id" />
  <member type="ignored_attribute" name="snapshot" /> <!-- TODO -->
  <member type="string_opt" name="next_scenario" />
  <member type="string_opt" name="description" />
  <member type="string_opt" name="name" />
  <member type="string_opt" name="map_data" />
  <member type="string_opt" name="define" />
  <member type="int_val" name="turns" default="-1" />
  <member type="int_val" name="turns_at" default="1" />
  <member type="string_list_val" name="random_start_time" />
  <member type="string_list_val" name="defeat_music" />
  <member type="string_list_val" name="victory_music" />
  <member type="string_val" name="theme" />
  <member type="bool_val" name="victory_when_enemies_defeated" default="true" />
  <member type="int_opt" name="bonus" />
  <member type="int_val" name="carryover_percentage" default="80" />
  <member type="bool_val" name="carryover_add" default="true" />
  <member type="bool_val" name="remove_from_carryover_on_defeat" default="true" />
  <member type="bool_val" name="disallow_recall" default="false" />
  <member type="int_val" name="experience_modifier" default="100" />
  <member type="int_opt" name="current_time" />
  <member type="string_opt" name="scenario_generation" />
  <member type="string_opt" name="map_generation" />
  <member type="std::vector[label]" name="label" />
  <member type="std::vector[item]" name="item" />
  <member type="std::vector[time_tag]" name="time" />
  <member type="std::vector[time_area]" name="time_area" />
  <member type="std::vector[side_tag]" name="side" />
  <member type="std::vector[event_tag]" name="event" />
  <member type="std::vector[music]" name="music" />
  <member type="util::optional[wml::raw_config]" name="story" />
  <member type="util::optional[wml::raw_config]" name="generator" />
</tag>

<!-- binary_path -->

<tag name="binary_path">
  <member type="string_val" name="path" />
</tag>

<!-- top_level -->

<heterogenous_sequence name="top_level_wml">
  <tag type="scenario_tag" alias="scenario" />
  <tag type="scenario_tag" alias="multiplayer" />
  <tag type="scenario_tag" alias="test" />
  <tag type="scenario_tag" alias="tutorial" />
  <tag type="units" alias="units" />
  <tag type="terrain_type" alias="terrain_type" />
  <tag type="terrain_graphics" alias="terrain_graphics" />
  <tag type="binary_path" alias="binary_path" />
  <tag type="unit_type" alias="unit_type" />
  <tag type="move_type" alias="move_type" />
  <tag type="event_tag" alias="event" />
  <tag type="lua" alias="lua" />
</heterogenous_sequence>

<tag name="top_level">
  <!--  <member type="top_level_wml" name="children" /> -->
  <member type="all_children_map" name="children" />
</tag>

</root>
